import unittest
import logging
from run import *

# class RunnerTest(unittest.TestCase):
#     try:
#         logging .info()
#     except:
#         logging.error('w',)


class RunnerTest(unittest.TestCase):
    try:
        def test_walk(self):
            runner1 = Runner("Бег")
            for i in range(10):
                runner1.walk()
            self.assertEqual(runner1.distance, 50)
        logging .info('test_walk выполнен успешно')
    except TypeError:
        logging.warning('Неверный скорость для Runner')

    try:
        def test_run(self):
            runner2 = Runner(2)
            for i in range(10):
                runner2.run()
            self.assertEqual(runner2.distance,100)

        logging.info('test_walk выполнен успешно')
    except TypeError:
        logging.warning('Неверный тип данных для объекта Runner')

    def test_challenge(self):
        runner1 = Runner("Бег")
        runner1 = Runner("Беги")
        for i in range(10):
            runner1.walk()
            runner1.run()
        self.assertNotEqual(runner1.distance != runner1.distance, True)
# if __name__=='__main__':
#     unittest.main()

if __name__=='__main__':
    logging.basicConfig(level=logging.INFO,filemode='w',filename='runner_tests.log',
                        encoding='UTF-8', format="%(asctime)s %(levelname)s %(message)s")
    unittest.main()


